plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.acc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 스웨거 설정
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.kafka:spring-kafka'
	
	implementation platform('software.amazon.awssdk:bom:2.20.138')
	implementation 'software.amazon.awssdk:sns'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'software.amazon.awssdk:cognitoidentityprovider:2.20.66'
	implementation 'com.auth0:jwks-rsa:0.21.0';
	implementation 'com.auth0:java-jwt:4.4.0';

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.1")
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs:3.2.0-M1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.redisson:redisson-spring-boot-starter:3.40.2"
}

tasks.named('test') {
	useJUnitPlatform()
}
